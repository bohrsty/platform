---
- name: Create group ssl-cert (CentOS)
  group:
    name: ssl-cert
    state: present
  when: ansible_distribution | lower == "centos"

- name: Create the backend storage directories
  file: 
    path: /data/{{ item }}
    owner: 1
    mode: 0750
    state: directory
  when: config_done is defined
  run_once: true
  with_items:
    - archiving
    - assets
    - website-screenshot-cache
    - beat

- name: Create the backend certificate storage directories
  file:
    path: /data/{{ item }}
    owner: 1
    group: ssl-cert
    mode: 0750
    state: directory
  when: config_done is defined
  run_once: true
  with_items:
    - certs
    - certs/apns

- name: Create the backend GPG storage directories
  file:
    path: /data/archiving/gpg
    owner: 1
    mode: 0700
    state: directory
  when: config_done is defined
  run_once: true

- name: Check APNS certificate is valid and doesn't expire within the next month
  openssl_certificate:
    path: "{{ apns_certificate }}"
    provider: assertonly
    valid_in: 2630000
  when: config_done is defined
  run_once: true
  delegate_to: localhost
  vars:
    ansible_become: no

- name: Install the APNS certificate
  copy:
    src: "{{ apns_certificate }}"
    dest: /data/certs/apns/aps-production.pem
    mode: 0440
    owner: 1
    group: ssl-cert
  when: config_done is defined
  run_once: true
  register: apns_source
  
- name: Ensure the secondary APNS certificate is configured correctly
  fail: msg="The secondary APNS certificate is not configured correctly."
  when: apns_certificate_2 is defined and apns_appid_2 is not defined or apns_appid_2 is defined and apns_certificate_2 is not defined

- name: Check the secondary APNS certificate is valid and doesn't expire within the next month
  openssl_certificate:
    path: "{{ apns_certificate_2 }}"
    provider: assertonly
    valid_in: 2630000
  when: apns_certificate_2 is defined
  run_once: true
  delegate_to: localhost
  vars:
    ansible_become: no

- name: Install the secondary APNS certificate
  copy:
    src: "{{ apns_certificate_2 }}"
    dest: "/data/certs/apns/{{ apns_certificate_2 | basename }}"
    mode: 0440
    owner: 1
    group: ssl-cert
  when: apns_certificate_2 is defined
  run_once: true
  register: apns2_source

- name: Check if teamwire worker is running
  command: docker ps
  register: docker_procs
  when:
    - (apns_source.changed or apns2_source.changed)
    - ansible_play_hosts | length() == 1

- name: Restart teamwire worker if APNS certificates have been updated and on single-setup
  command: docker restart teamwire_worker
  when:
    - (apns_source.changed or apns2_source.changed)
    - ansible_play_hosts | length() == 1
    - "'teamwire_worker' in docker_procs.stdout"

- include: "single_{{ ansible_distribution }}.yml"
  when: "'backend_servers' not in groups"

- include: "haproxy.yml"
  when:
    - mysql_host is not defined
    - "'database_servers' in groups"
    - groups['database_servers'] | length > 1
    - ansible_distribution | lower != "centos"

- name: die
  fail:
    msg: "died {{ ansible_distribution }}"

# The cluster backend deployment is delegated to the nomad servers
