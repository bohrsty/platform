---
- name: Check Ansible version
  fail:
    msg:
      - "Ansible >= 2.4.2 is required"
  when: 
    - ansible_version['major'] < 2
    - ansible_version['minor'] < 4
    - ansible_version['revision'] < 2

- name: Enable system-wide proxy (HTTP)
  lineinfile: 
    dest: /etc/environment
    line: "export http_proxy={{http_proxy}}"
  when: http_proxy is defined

- name: Disable system-wide proxy when no proxy is configured (HTTP)
  lineinfile:
    dest: /etc/environment
    regexp: ^export http_proxy=
    state: absent
  when: http_proxy is not defined

- name: Enable system-wide proxy (HTTPS)
  lineinfile:
    dest: /etc/environment
    line: "export https_proxy={{http_proxy}}"
  when: http_proxy is defined

- name: Disable system-wide proxy when no proxy is configured (HTTPS)
  lineinfile:
    dest: /etc/environment
    regexp: ^export https_proxy=
    state: absent
  when: http_proxy is not defined

- name: Don't access localhost and local services via proxy
  lineinfile:
    dest: /etc/environment
    line: "export no_proxy=localhost,127.0.0.1,{{ inventory_hostname }},.consul"
  when: http_proxy is defined

- name: Remove proxy local exceptions when no proxy is configured
  lineinfile:
    dest: /etc/environment
    regexp: ^export no_proxy=
    state: absent
  when: http_proxy is not defined

- name: Install EPEL repository
  yum:
    name: epel-release
    state: present

- name: Install pip
  yum:
    name: python2-pip
    state: present

- name: Set hostname
  when: config_done is defined or inventory_hostname not in ignore_hostnames
  hostname:
    name: "{{ inventory_hostname if inventory_hostname not in ignore_hostnames else external_hostname }}"

- name: Add hostname to localhost
  when: config_done is defined
  lineinfile:
    dest: /etc/hosts
    regexp: ^127\.0\.0\.1\s+localhost
    line: "127.0.0.1 localhost {{ external_hostname }}"

- name: Configure DNS servers
  nmcli:
    conn_name: "{{ eth_conn_name if config_done is defined and eth_conn_name is defined else 'eth0' }}"
    type: ethernet
    dns4: "{{ dns_servers }}"
    state: present
  when:
    - config_done is defined
    - dns_servers is defined 
    - "'consul_servers' not in groups"
  notify: restart NetworkManager

- name: Install yum-cron if not explicitly disabled
  yum:
    pkg: yum-cron
    state: present
  when:
    - not offline_mode.stat.exists
    - disable_unattended_upgrades is not defined

- name: Remove yum-cron if explicitly disabled
  yum:
    name: yum-cron
    state: absent
  when:
    - not offline_mode.stat.exists
    - disable_unattended_upgrades is defined

- name: Configure yum-cron daily to security updates only
  lineinfile:
    dest: /etc/yum/yum-cron.conf
    regexp: '^update_cmd'
    line: 'update_cmd = minimal-security-severity:Critical'
  when: disable_unattended_upgrades is not defined

- name: Configure yum-cron daily to apply security updates
  lineinfile:
    dest: /etc/yum/yum-cron.conf
    regexp: '^apply_updates'
    line: 'apply_updates = yes'
  when: disable_unattended_upgrades is not defined

- name: Configure yum-cron hourly to security updates only
  lineinfile:
    dest: /etc/yum/yum-cron-hourly.conf
    regexp: '^update_cmd'
    line: 'update_cmd = minimal-security-severity:Critical'
  when: disable_unattended_upgrades is not defined

- name: Install useful tools
  yum: 
    name: "{{ item }}"
    state: present
  with_items:
  - htop
  - sysstat
  - iotop
  - mc
  - nano
  - mailx
  - unzip
  - patch
  - patchutils
  - glances
  - zile
  - haveged
  - openldap-clients
  - vim
  - bash-completion
  - bash-completion-extras
  - telnet

- name: Remove useless packages
  yum:
    pkg: "{{ item }}"
    state: absent
  with_items:
  - mlocate # sucks IO heavily

- name: Install Postfix
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - postfix
    - cyrus-sasl
    - cyrus-sasl-gssapi
    - cyrus-sasl-plain

- name: Ensure postfix service is started and enabled
  service:
    name: postfix
    state: started
    enabled: true

- name: Create SASL directory for postfix
  file:
    state: directory
    owner: root
    group: root
    mode: 0755
    path: /etc/postfix/sasl

- name: Set timezone to UTC
  timezone:
    name: Etc/UTC
  notify: restart crond

- name: Install the NTP daemon
  yum:
    name: ntp
    state: present

- name: Write NTP configuration file
  template:
    src: ntp.conf-centos.j2
    dest: /etc/ntp.conf

- name: Enable and start the NTP daemon
  service:
    name: ntpd
    state: started
    enabled: true

- name: Allow incoming SSH access
  firewalld:
    service: ssh
    state: enabled
    permanent: true

- name: Disable SSH root login
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^#+ +PermitRootLogin"
    line: "PermitRootLogin no"

- name: Install git
  yum:
    name: git
    state: present

- name: Install nux-dextop repository for tmate
  yum:
    name: http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm
    state: present

- name: Install tmate
  yum:
    name: tmate
    state: present

- name: Ensure rsyslog is installed
  yum:
    name: rsyslog
    state: present
