- name: Check if Vault has been bootstrapped
  stat: path=/etc/vault-bootstrapped
  register: vault_bootstrapped

- name: Check if Vault is already installed
  stat: path=/usr/local/bin/vault
  register: vault_binary

- name: Create 3rd party download directory
  file:
    dest: /var/cache/downloads
    state: directory
    mode: 0755

- name: Download Vault
  get_url:
    url: https://releases.hashicorp.com/vault/{{vault_version}}/vault_{{vault_version}}_linux_amd64.zip
    dest: /var/cache/downloads/vault_{{vault_version}}_linux_amd64.zip
    checksum: sha256:{{vault_checksum}}
    mode: 0440
  register: vault_downloaded

- name: Install the Vault binary
  unarchive: 
    src: /var/cache/downloads/vault_{{vault_version}}_linux_amd64.zip
    dest: /usr/local/bin
    mode: 0755
    copy: no
  notify: Restart Vault
  when: vault_downloaded.changed or not vault_binary.stat.exists 

- name: Create Vault directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  with_items:
    - /etc/vault
    - /var/lib/vault
    - /var/lib/vault/ssl
    - /var/lib/vault/store

- block:
    - name: Check if Vault certificates exist and are valid
      openssl_certificate:
        path: /var/lib/vault/ssl/vault.crt
        privatekey_path: /var/lib/vault/ssl/vault.pem
        has_expired: False
  rescue:
    - debug: msg="Generating SSL certificates for Vault"
    - include: ssl-setup.yml
  when: vault_bootstrapped.stat.exists

- name: Write Vault config
  template: src=vault.hcl.j2 dest=/etc/vault/vault.hcl
  notify: Restart Vault

- name: Vault systemd config
  copy: src=vault.service dest=/etc/systemd/system/vault.service
  notify:
    - reload systemd
    - Restart Vault

- name: Enable the Vault service
  service: name=vault state=started enabled=yes

- include: secrets.yml
  when: vault_bootstrapped.stat.exists