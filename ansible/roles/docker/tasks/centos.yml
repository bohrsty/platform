---
- name: Ensure rsyslog is installed
  yum:
    name: rsyslog
    state: present

- name: Configure rsyslog for docker containers
  copy:
    src: 10-docker.conf
    dest: /etc/rsyslog.d/10-docker.conf
  notify: restart rsyslog

- name: Don't log container logs into /var/log/messages
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: ^\*\.info;mail\.none;authpriv\.none;cron\.none
    line: "*.info;mail.none;authpriv.none;cron.none;local6.none    /var/log/messages"
  notify: restart rsyslog

- name: Install logrotate job for container logs
  copy:
    src: container-log
    dest: /etc/logrotate.d/container-log

- name: Install docker and python-docker-py
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - docker
    - python-docker-py

- name: Disable iptables for Docker to stop it messing up firewall rules
  copy:
    src: disable_docker_iptables_centos.json
    dest: /etc/docker/daemon.json

- name: Enable and start docker
  service:
    name: docker
    state: started
    enabled: true

- name: Create systemd drop-in directory for docker
  file:
    name: /etc/systemd/system/docker.service.d
    state: directory

- name: Start Docker after mounting NFS shares
  copy:
    src: wait_for_nfs_centos.conf
    dest: /etc/systemd/system/docker.service.d/wait_for_nfs.conf
  notify: reload systemd

# Make sure docker is restarted before the containers are set up, otherwise
# the restart would kill the running containers. We need to restart before the
# following step, otherwise the login would fail when a proxy is configured.
- meta: flush_handlers

- name: Check if installing offline
  stat: path=/etc/offline_installation
  register: offline_mode

- name: Log in on Docker Hub
  docker_login:
    username: "{{ dockerhub_username }}"
    password: "{{ dockerhub_password }}"
    email: "{{ dockerhub_email }}"
  when:
    - config_done is defined
    - not offline_mode.stat.exists

- name: Configure firewall to allow Docker containers access to the host
  firewalld:
    immediate: true
    interface: docker0
    permanent: true
    state: enabled
    zone: trusted
